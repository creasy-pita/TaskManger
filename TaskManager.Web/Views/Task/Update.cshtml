@using TaskManager.Domain.Model
@model TaskManager.Domain.Model.tb_task_model
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<tb_category_model> Category = ViewBag.Category as List<tb_category_model>;
    List<tb_node_model> Node = ViewBag.Node as List<tb_node_model>;
    List<tb_user_model> User = ViewBag.User as List<tb_user_model>;
    List<tb_version_model> Version = ViewBag.Version as List<tb_version_model>;
    List<tb_package_model> package = ViewBag.package as List<tb_package_model>;
    List<tb_packageversion_model> packageversion = ViewBag.packageversion as List<tb_packageversion_model>;
    tb_tempdata_model TempData = ViewBag.TempData as tb_tempdata_model;
    int role = Convert.ToInt32(ViewBag.Role);
    if (role != (int)TaskManager.Core.EnumUserRole.Admin)
    {
        Model.taskstate = (int)TaskManager.Core.EnumTaskState.Running;
    }
}

<script>
    function GetVersionList(packageid) {
        var url = "/api/PackageVersion/view/" + packageid;
        //alert(url);
        $.ajax({
            url: url,
            type: "GET",
            processData: false,
            contentType: false,
            success: function (data) {
                if (data != undefined) {
                    var selectbox = $("#taskpackageversionid").get(0);
                    removeOptions(selectbox);
                    for (var i = 0; i < data.length; i++) {
                        var pv = data[i];
                        var option = document.createElement("option");
                        option.text = pv.versionno + '_' + pv.zipfilename;
                        option.value = pv.id;
                        selectbox.add(option);
                    }
                }
            }
        });
    }
    function removeOptions(selectbox) {
        var i;
        for (i = selectbox.options.length - 1; i >= 0; i--) {
            selectbox.remove(i);
        }
    }

    function sub() {
        //TBD 需要修改为 与Add 相同 能够保存 完整的任务 对象信息
        var sel = $("#taskversion").find("option:selected").val();
        if (sel == -1) {
            if ($("#TaskDll").val() == "") {
                alert("请选择新版本文件！")
                return false;
            }
        }
    }
</script>
<div class="head">
    <div class="title">
        修改任务 @Html.Raw(TaskManager.Web.Models.Common.HelpHtml(""))
    </div>
</div>
<div>
    @Html.ValidationSummary()
    @if (Model != null)
    { 
        <input type="hidden" value="@Model.id" id="id" />
        using (Html.BeginForm("Update", "Task", FormMethod.Post, new { enctype = "multipart/form-data",@onsubmit="return sub()" }))
        {
            <input type="hidden" value="@Model.id" name="id" />
            <ul class="mydetail">
                <li>
                    <label>任务名</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") name="taskname" value="@Model.taskname" />
                </li>
                <li>
                    <label>组别</label>
                    <select name="categoryid" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "")>
                        @foreach (var c in Category)
                        {
                            <option value="@c.id" @Html.Raw(c.id == @Model.categoryid ? "selected=selected" : "")>@c.categoryname</option>
                        }
                    </select>
                </li>
                <li>
                    <label>创建人</label>
                    <select name="taskcreateuserid">
                        @foreach (var c in User)
                        {
                            <option value="@c.id" @Html.Raw(c.id == @Model.taskcreateuserid ? "selected=selected" : "")>@c.username</option>
                        }
                    </select>
                </li>
                <li>
                    <label>节点</label>
                    <select name="nodeid" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "")>
                        @foreach (var n in Node)
                        {
                            <option value="@n.id" @Html.Raw(n.id == @Model.nodeid ? "selected=selected" : "")>@n.nodename</option>
                        }
                    </select>
                </li>
                <li>
                    <label>web程序根目录</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") id="taskpath" name="taskpath" value="@Model.taskpath" />
                </li>
                <li>
                    <label>启动命令</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") id="taskstartfilename" name="taskstartfilename" value="@Model.taskstartfilename" />
                </li>
                <li>
                    <label>命令参数</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") id="taskarguments" name="taskarguments" value="@Model.taskarguments" />
                </li>
                <li>
                    <label>查找进程批处理脚本</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") id="taskfindbatchscript" name="taskfindbatchscript" value="@Model.taskfindbatchscript" />
                </li>
                <li>
                    <label>卸载任务批处理脚本</label><input class="mylongtext" type="text" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") id="taskuninstallbatchscript" name="taskuninstallbatchscript" value="@Model.taskuninstallbatchscript" />
                </li>
                <li>
                    <label>程序仓库列表</label>
                    <select id="taskpackageid" name="taskpackageid" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") onchange="GetVersionList(this.value)">
                        <option value="-1"></option>
                        @foreach (var p in package)
                        {
                            <option value="@p.id" @Html.Raw(p.id == @Model.taskpackageid ? "selected=selected" : "")>@(p.packagename)</option>
                        }
                    </select>
                </li>
                <li>
                    <label>程序版本列表</label>
                    <select id="taskpackageversionid" name="taskpackageversionid" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") >
                        <option value="-1"></option>
                        @foreach (var pv in packageversion)
                        {
                            <option value="@pv.id" @Html.Raw(pv.id == @Model.taskpackageversionid ? "selected=selected" : "")>@(pv.versionno+"_"+pv.zipfilename)</option>
                        }
                    </select>
                </li>
                <li>
                    <label>备注</label>
                    <textarea id="taskremark" name="taskremark" @Html.Raw(Model.taskstate == (int)TaskManager.Core.EnumTaskState.Running ? "readonly=readonly" : "") style="height:200px">@Model.taskremark</textarea>
                </li>
                <li>
                    @if (Model.taskstate == (int)TaskManager.Core.EnumTaskState.Stop && role == (int)TaskManager.Core.EnumUserRole.Admin)
                    {
                        <input type="submit" class="btn1" value="提交" />
                    }
                </li>
            </ul>
        }
    }
</div>
